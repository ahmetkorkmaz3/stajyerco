{"ast":null,"code":"var _class, _descriptor, _descriptor2, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\nimport { observable, action } from \"mobx\";\nlet AuthStore = (_class = (_temp = class AuthStore {\n  constructor() {\n    _initializerDefineProperty(this, \"logged_in\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"logged_user\", _descriptor2, this);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"logged_in\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"logged_user\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n})), _class);\nconst store = new AuthStore();\nexport default store;","map":{"version":3,"sources":["C:/Users/orcun/projects/stajyerco/src/stores/AuthStore.js"],"names":["observable","action","AuthStore","store"],"mappings":";;;;;;;;AAAA,SAAQA,UAAR,EAAoBC,MAApB,QAAiC,MAAjC;IAEMC,S,sBAAN,MAAMA,SAAN,CAAgB;AAAA;AAAA;;AAAA;AAAA;;AAAA,C,mFACXF,U;;;;;WAAuB,K;;+EACvBA,U;;;;;WAAyB,I;;;AAG9B,MAAMG,KAAK,GAAG,IAAID,SAAJ,EAAd;AACA,eAAeC,KAAf","sourcesContent":["import {observable, action} from \"mobx\";\r\n\r\nclass AuthStore {\r\n    @observable logged_in = false;\r\n    @observable logged_user = null;\r\n}\r\n\r\nconst store = new AuthStore();\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}